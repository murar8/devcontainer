name: release

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  schedule:
    - cron: "*/5 * * * *"

jobs:
  parse-config:
    runs-on: ubuntu-latest
    outputs: { matrix: "${{ steps.read-config.outputs.matrix }}" }
    steps:
      - uses: actions/checkout@v2
      - id: read-config
        run: 'echo ::set-output name=matrix::\{ \"include\": $(cat release-config.json) \}'

  release:
    runs-on: ubuntu-latest
    needs: parse-config
    strategy: { matrix: "${{ fromJson(needs.parse-config.outputs.matrix) }}" }
    steps:
      - uses: actions/checkout@v2

      - id: setup-buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - id: create-metadata
        run: >
          .github/scripts/create-metadata.sh
          --github-sha="${{ github.sha }}"
          --github-ref="${{ github.ref }}"
          --github-repo="${{ github.repository }}"

      - run: >
          scripts/build-push.sh
          --build-context   "${{ github.workspace }}"
          --base-image      "${{ matrix.base }}"
          --image-name      "ghcr.io/${{ github.repository_owner }}/devcontainer-${{ matrix.name }}"
          --layers          ${{ join(matrix.layers, ' ') }}
          --cache-repo      "ghcr.io/${{ github.repository_owner }}/devcontainer-cache"
          --tags            ${{ steps.create-metadata.outputs.tags }}
          --labels          ${{ steps.create-metadata.outputs.labels }}
