name: release

on:
  push:
    branches: ["main"]
    tags: ["v*"]

jobs:
  create-matrix:
    runs-on: ubuntu-latest
    outputs: { matrix: "${{ steps.create-matrix.outputs.matrix }}" }
    steps:
      - uses: actions/checkout@v2
      - id: create-matrix
        run: .github/scripts/create-matrix.sh

  release-base-images:
    runs-on: ubuntu-latest
    needs: create-matrix
    strategy:
      max-parallel: 1
      matrix: ${{fromJson(needs.create-matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - id: create-env
        run: >
          .github/scripts/create-matrix.sh
          ${{ github.sha }}
          ${{ github.ref }}
          ${{ github.repository }}
          ${{ github.repository_owner }}
          ${{ matrix.base-image }}
          ${{ matrix.image }}

      - uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          file: ${{ steps.create-env.outputs.file }}
          build-args: ${{ steps.create-env.outputs.build-args }}
          tags: ${{ steps.create-env.outputs.tags }}
          labels: ${{ steps.create-env.outputs.labels }}
